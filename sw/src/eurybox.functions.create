#!/bin/bash
#EuryBOX create functions file

#FIXME: extract function parameters to transfer to control section use and make functions more generic and reusable
eurybox_create_archive_desc ()
{
  local DESC_OUT
  local SYNC_OUT
  local STATUS
#TODO: IMPLEMENT PARALLEL EXTRACTION FOR GZ AND BZ2
  case ${EURYBOX_BACKUP_ARCHIVE[FORMAT]} in
    "tar" ) TAR_OPTIONS="-Stv" ;;
    "tar.gz" ) TAR_OPTIONS="-Stvz" ;;
    "tar.bz2" ) TAR_OPTIONS="-Stvj" ;;
  esac
  STATUS=1234
  DESTINATION=${EURYBOX_BACKUP_DESTINATION[MOUNT]}/${EURYBOX_BACKUP_ARCHIVE[NAME]}.desc
  DESC_OUT=`sudo sh -c "echo ARCHIVE_CONTENT:$EURYBOX_CORPORATE >> $DESTINATION" 2>&1`
  DESC_OUT=`sudo sh -c "echo ARCHIVE_FILE:${EURYBOX_BACKUP_ARCHIVE[NAME]} >> $DESTINATION" 2>&1`
  DESC_OUT=`sudo sh -c "echo ARCHIVE_FORMAT:${EURYBOX_BACKUP_ARCHIVE[FORMAT]} >> $DESTINATION" 2>&1`
  DESC_OUT=`sudo sh -c "echo ARCHIVE_TARGETS:${EURYBOX_BACKUP_TARGETS[*]} >> $DESTINATION" 2>&1`
  DESC_OUT=`sudo sh -c "echo ARCHIVE_TYPE:$EURYBOX_BACKUP_TYPE >> $DESTINATION" 2>&1`
  DESC_OUT=`sudo sh -c "echo ARCHIVE_VERSION:$EURYBOX_VERSION >> $DESTINATION" 2>&1`
  DESC_OUT=`sudo sh -c "echo ECC_FILE:${EURYBOX_BACKUP_ARCHIVE[NAME]}.${EURYBOX_BACKUP_ARCHIVE[ECC]} >> $DESTINATION" 2>&1`
  DESC_OUT=`sudo sh -c "echo ECC_FORMAT:${EURYBOX_BACKUP_ARCHIVE[ECC]} >> $DESTINATION" 2>&1`
  DESC_OUT=`sudo sh -c "echo ECC_LEVEL:${EURYBOX_BACKUP_ARCHIVE[ECC_LEVEL]\%} >> $DESTINATION" 2>&1`
  DESC_OUT=`sudo sh -c "echo HASH_FILE:${EURYBOX_BACKUP_ARCHIVE[NAME]}.${EURYBOX_BACKUP_ARCHIVE[HASH]} >> $DESTINATION" 2>&1`
  DESC_OUT=`sudo sh -c "echo HASH_FORMAT:${EURYBOX_BACKUP_ARCHIVE[HASH]} >> $DESTINATION" 2>&1`
  DESC_OUT=`sudo sh -c "echo ENCRYPTED_ARCHIVE:${EURYBOX_BACKUP_ARCHIVE[ENCRYPT]} >> $DESTINATION" 2>&1`
  if [[ ${EURYBOX_BACKUP_ARCHIVE[ENCRYPT]} = "true" ]]
  then
    DESC_OUT=`sudo sh -c "echo ENCRYPTION_ALGORITHM:${EURYBOX_BACKUP_ARCHIVE[ENC_ALGO]} >> $DESTINATION" 2>&1`
    DESC_OUT=`sudo sh -c "echo ARCHIVE_CONTENT: >> $DESTINATION" 2>&1`
    #FIXME: function to read archive with variable archive format required here
    DESC_OUT=$((
    (
      sudo sh -c "openssl enc -${EURYBOX_BACKUP_ARCHIVE[ENC_ALGO]} -d -in ${EURYBOX_BACKUP_DESTINATION[MOUNT]}/${EURYBOX_BACKUP_ARCHIVE[NAME]}.${EURYBOX_BACKUP_ARCHIVE[FORMAT]} -k ${EURYBOX_BACKUP_ARCHIVE[PASSWORD]} | tar ${TAR_OPTIONS} >> $DESTINATION"
#          STATUS=$(( ${PIPESTATUS[0]} + ${PIPESTATUS[1]} ))
    )) 2>&1)
    STATUS=$?
  else
    DESC_OUT=`sudo sh -c "sudo echo ARCHIVE_CONTENT: >> $DESTINATION" 2>&1`
    #FIXME: function to read archive with variable archive format required here
    DESC_OUT=$((
    (
      sudo sh -c "tar ${TAR_OPTIONS}f ${EURYBOX_BACKUP_DESTINATION[MOUNT]}/${EURYBOX_BACKUP_ARCHIVE[NAME]}.${EURYBOX_BACKUP_ARCHIVE[FORMAT]} >> $DESTINATION"
    )) 2>&1)
    STATUS=$?
  fi
  if [[ !($STATUS -eq 0) ]]
  then
    eurybox_display_message warning CREATE "Archive description creation failed - error $STATUS:\n$DESC_OUT"
  else
    eurybox_display_message message CREATE "Archive description creation - OK"
    eurybox_display_message debug CREATE "Description command output:\n$DESC_OUT"
    SYNC_OUT=`sudo sync 2>&1`
    STATUS=$?
    if [[ !($STATUS -eq 0) ]]
    then
      eurybox_display_message warning CREATE "Archive description FS sync failed - error $STATUS:\n$SYNC_OUT"
    else
      eurybox_display_message message CREATE "Archive description FS sync - OK"
      eurybox_display_message debug CREATE "Sync command output:\n$SYNC_OUT"
    fi
  fi
}

#FIXME: extract function parameters to transfer to control section use and make functions more generic and reusable
eurybox_create_archive_tar ()
{
  local TAR_OUT
  local SYNC_OUT
  local STATUS
  if [[ $EURYBOX_LOG_LEVEL = "debug" || $EURYBOX_LOG_LEVEL = "verbose" ]]
  then
    TAR_OPTIONS="-v"
  else
    TAR_OPTIONS="-"
  fi
  case ${EURYBOX_BACKUP_ARCHIVE[FORMAT]} in
    "tar" ) TAR_OPTIONS="${TAR_OPTIONS}Sc" ;;
    "tar.gz" ) TAR_OPTIONS="${TAR_OPTIONS}Sc --use-compress-program=pigz" ;;
    "tar.bz2" ) TAR_OPTIONS="${TAR_OPTIONS}Sc --use-compress-program=pbzip2 " ;;
    #xz
  esac
  if [[ ${EURYBOX_BACKUP_ARCHIVE[ENCRYPT]} = "true" ]]
  then
    TAR_OUT=$((
    (
      sudo tar ${TAR_OPTIONS} ${EURYBOX_BACKUP_TARGETS[*]} | sudo openssl enc -salt -e -${EURYBOX_BACKUP_ARCHIVE[ENC_ALGO]} -k ${EURYBOX_BACKUP_ARCHIVE[PASSWORD]} -out ${EURYBOX_BACKUP_DESTINATION[MOUNT]}/${EURYBOX_BACKUP_ARCHIVE[NAME]}.${EURYBOX_BACKUP_ARCHIVE[FORMAT]}
#          STATUS=$(( ${PIPESTATUS[0]} + ${PIPESTATUS[1]} ))
    )) 2>&1)
    STATUS=$?
  else
    TAR_OUT=`sudo tar ${TAR_OPTIONS} -f ${EURYBOX_BACKUP_DESTINATION[MOUNT]}/${EURYBOX_BACKUP_ARCHIVE[NAME]}.${EURYBOX_BACKUP_ARCHIVE[FORMAT]} ${EURYBOX_BACKUP_TARGETS[*]} 2>&1`
    STATUS=$?
  fi
  if [[ !($STATUS -eq 0) ]]
  then
    eurybox_display_message error CREATE "Archive creation failed - error: $STATUS:\n$TAR_OUT"
  else
    eurybox_display_message message CREATE "Archive creation - OK"
    eurybox_display_message debug CREATE "Tar command output:\n$TAR_OUT"
    SYNC_OUT=`sudo sync 2>&1`
    STATUS=$?
    if [[ !($STATUS -eq 0) ]]
    then
      eurybox_display_message warning CREATE "Archive description FS sync failed - error: $STATUS:\n$SYNC_OUT"
    else
      eurybox_display_message message CREATE "Archive description FS sync - OK"
      eurybox_display_message debug CREATE "Sync command output:\n$SYNC_OUT"
    fi
  fi
}

#FIXME: extract function parameters to transfer to control section use and make functions more generic and reusable
eurybox_create_archive_par ()
{
  local PAR_OUT
  local SYNC_OUT
  local STATUS
  case $EURYBOX_LOG_LEVEL in
    debug|verbose ) PAR_OPTIONS="-v -v";;
    message ) PAR_OPTIONS="-v";;
    warning ) PAR_OPTIONS="-q";;
    error ) PAR_OPTIONS="-q -q";;
  esac
  case "${EURYBOX_BACKUP_ARCHIVE[ECC]}" in
    "par2" )
      PAR_OUT=`sudo par2 c $PAR_OPTIONS -r${EURYBOX_BACKUP_ARCHIVE[ECC_LEVEL]} -t+ ${EURYBOX_BACKUP_DESTINATION[MOUNT]}/${EURYBOX_BACKUP_ARCHIVE[NAME]}.${EURYBOX_BACKUP_ARCHIVE[ECC]} ${EURYBOX_BACKUP_DESTINATION[MOUNT]}/${EURYBOX_BACKUP_ARCHIVE[NAME]}.${EURYBOX_BACKUP_ARCHIVE[FORMAT]} 2>&1`
      STATUS=$?
    ;;
    * )
      eurybox_display_message error CREATE "Archive ecc format unknown: ${EURYBOX_BACKUP_ARCHIVE[HASH]}"
    ;;
  esac
  if [[ !($STATUS -eq 0) ]]
  then
    eurybox_display_message warning ARCHIVE "Archive ecc creation failed - error $STATUS:\n$PAR_OUT"
  else
    eurybox_display_message message CREATE "Archive ecc creation - OK"
    eurybox_display_message debug CREATE "Ecc command output:\n$PAR_OUT"
    SYNC_OUT=`sudo sync 2>&1`
    STATUS=$?
    if [[ !($STATUS -eq 0) ]]
    then
      eurybox_display_message warning CREATE "Archive description FS sync failed - error $STATUS:\n$SYNC_OUT"
    else
      eurybox_display_message message CREATE "Archive description FS sync - OK"
      eurybox_display_message debug CREATE "Sync command output:\n$SYNC_OUT"
    fi
  fi
}

#FIXME: extract function parameters to transfer to control section use and make functions more generic and reusable
eurybox_create_archive_sha ()
{
  local SHA_OUT
  local SYNC_OUT
  local STATUS
  case $EURYBOX_LOG_LEVEL in
    debug|verbose ) SHA_OPTIONS="";;
    message ) SHA_OPTIONS="";;
    warning ) SHA_OPTIONS="";;
    error ) SHA_OPTIONS="";;
  esac
  case "${EURYBOX_BACKUP_ARCHIVE[HASH]}" in
    "sha256" )
      SHA_OUT=`sudo sh -c "sha256sum $SHA_OPTIONS ${EURYBOX_BACKUP_DESTINATION[MOUNT]}/${EURYBOX_BACKUP_ARCHIVE[NAME]}* > ${EURYBOX_BACKUP_DESTINATION[MOUNT]}/${EURYBOX_BACKUP_ARCHIVE[NAME]}.${EURYBOX_BACKUP_ARCHIVE[HASH]}" 2<&1`
      STATUS=$?
    ;;
    "sha512" )
      SHA_OUT=`sudo sh -c "sha512sum $SHA_OPTIONS ${EURYBOX_BACKUP_DESTINATION[MOUNT]}/${EURYBOX_BACKUP_ARCHIVE[NAME]}* > ${EURYBOX_BACKUP_DESTINATION[MOUNT]}/${EURYBOX_BACKUP_ARCHIVE[NAME]}.${EURYBOX_BACKUP_ARCHIVE[HASH]}" 2<&1`
      STATUS=$?
    ;;
    * )
      eurybox_display_message error CREATE "Archive hash format unknown: ${EURYBOX_BACKUP_ARCHIVE[HASH]}"
    ;;
  esac
  if [[ !($STATUS -eq 0) ]]
  then
    eurybox_display_message warning CREATE "Archive hash creation failed - error $STATUS:\n$SHA_OUT"
  else
    eurybox_display_message message CREATE "Archive hash creation - OK"
    eurybox_display_message debug CREATE "Hash command output:\n$SHA_OUT"
    SYNC_OUT=`sudo sync 2>&1`
    STATUS=$?
    if [[ !($STATUS -eq 0) ]]
    then
      eurybox_display_message warning CREATE "Archive description FS sync failed - error $STATUS:\n$SYNC_OUT"
    else
      eurybox_display_message message CREATE "Archive description FS sync - OK"
      eurybox_display_message debug CREATE "Sync command output:\n$SYNC_OUT"
    fi
  fi
}

